package singletype

import (
	"hsmyc/gocms/views/components/uicomponents/modal"
	"hsmyc/gocms/models"
	"hsmyc/gocms/views/components/createschema/singletype/singletypeitem"
)

var Fields = []models.Field{
	{
		Name: "Text",
		Type: "string",
	},
	{
		Name: "Boolean",
		Type: "boolean",
	},
	{
		Name: "Rich text",
		Type: "string",
	},
}

templ CreateSingleType() {
	// TODO: Add form validation: id is required and must be unique and no spaces. Name is required.
	<div class="st-container" id="single_type_container">
		<div class="st-config-container">
			<h2>Settings</h2>
			<div class="st-config">
				<div class="st-config-item">
					<label for="single_type_id">API ID</label>
					<input type="text" id="single_type_id" name="single_type_id"/>
				</div>
				<div class="st-config-item">
					<label for="single_type_name">Name</label>
					<input type="text" id="single_type_name" name="single_type_name"/>
				</div>
			</div>
		</div>
		<div>
			<h2>Selected fields:</h2>
			<div id="single_type_fields" class="st-fields">
				<p>No fields selected</p>
			</div>
			<div class="st-modal-button-container">
				<i data-modal-target="st-modal" class="fa-solid fa-file-circle-plus st-modal-button modal__open"></i>
			</div>
		</div>
		<div class="st-modal-container">
			@modal.Modal("st-modal") {
				<div class="modal-body">
					<button data-modal-close class="modal__close">X</button>
					for _, field := range Fields {
						@singletypeitem.SingleTypeItem(field)
					}
					<button data-modal-close id="single_type_item_save_button" class="single_type_save_button">Save</button>
				</div>
			}
		</div>
		<button id="single_type_save_button" class="st-save">Save</button>
	</div>
}
